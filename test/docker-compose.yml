version: '3.8'

networks:
  internal:

volumes:
  wallet:
  parse:
  persist:
  http:
  network:
  db:
  db_shared:

x-db-custom: &db-variables
  DB_TYPE: mongo
  DB_HOST: ${DB_HOST-db}  
  DB_USERNAME: ${DB_USERNAME-root}
  DB_PASSWORD: ${DB_PASSWORD-rootpw}
  DB_DATABASE: ${DB_DATABASE-trustchain}

services:
  wallet:
    image: trustcerts/trustchain-wallet:${IMAGE_TAG-dev}
    restart: ${RESTART-always}
    environment:
      IDENTIFIER: ${IDENTIFIER}
      LOG_LEVEL: ${LOG_LEVEL-info}
    volumes:
      - wallet:/app/storage
    networks:
      internal:
    ports:
      - ${WALLET_PORT_HTTP}:3000
      - ${WALLET_PORT_TCP}:3001

  parse:
    image: trustcerts/trustchain-parse:${IMAGE_TAG-dev}
    restart: ${RESTART-always}
    environment:
      IDENTIFIER: ${IDENTIFIER}
      LOG_LEVEL: ${LOG_LEVEL-info}
      <<: *db-variables
    volumes:
      - parse:/app/storage
      - db_shared:/app/db_shared
    networks:
      internal:
    ports:
      - ${PARSE_PORT_HTTP}:3000
      - ${PARSE_PORT_TCP}:3001

  persist:
    image: trustcerts/trustchain-persist:${IMAGE_TAG-dev}
    restart: ${RESTART-always}
    environment:
      IDENTIFIER: ${IDENTIFIER}
      LOG_LEVEL: ${LOG_LEVEL-info}
    volumes:
      - persist:/app/storage
    networks:
      internal:
    ports:
      - ${PERSIST_PORT_HTTP}:3000
      - ${PERSIST_PORT_TCP}:3001

  http:
    image: trustcerts/trustchain-http-${NODE_TYPE}:${IMAGE_TAG-dev}
    restart: ${RESTART-always}
    environment:
      NODE_SECRET: ${NODE_SECRET}
      NETWORK_SECRET: ${NETWORK_SECRET}
      IDENTIFIER: ${IDENTIFIER}
      LOG_LEVEL: ${LOG_LEVEL-info}
      RESET: ${RESET-false}
      <<: *db-variables
    volumes:
      - http:/app/storage
    networks:
      internal:
    ports:
      - ${HTTP_PORT_HTTP}:3000
      - ${HTTP_PORT_TCP}:3001
  network:
    image: trustcerts/trustchain-network-${NODE_TYPE}:${IMAGE_TAG-dev}
    restart: ${RESTART-always}
    environment:
      OWN_PEER: ${OWN_PEER-info}    
      NETWORK_SECRET: ${NETWORK_SECRET}
      CHUNK_SIZE: ${CHUNK_SIZE-100}
      IDENTIFIER: ${IDENTIFIER}
      LOG_LEVEL: ${LOG_LEVEL-info}
      RECONNECT: ${RECONNECT-true}
      <<: *db-variables
    volumes:
      - network:/app/storage
    networks:
      internal:
    ports:
    - ${NETWORK_PORT_HTTP}:3000
    - ${NETWORK_PORT_TCP}:3001
  db:
    image: mongo
    restart: ${RESTART-always}
    volumes:
      - db:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${DB_USERNAME-root}
      MONGO_INITDB_ROOT_PASSWORD: ${DB_PASSWORD-rootpw}
      MONGO_INITDB_DATABASE: ${DB_DATABASE-trustchain}
    ports:
      - ${DB_PORT}:27017
    extra_hosts:
      - "host.docker.internal:172.17.0.1"
      
  redis:
    image: redis
    restart: ${RESTART-always}
    ports:
     - ${REDIS_PORT}:6379
    networks:
      internal:
