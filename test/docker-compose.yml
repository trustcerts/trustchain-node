version: '3.8'

networks:
  internal:

volumes:
  wallet:
  parse:
  persist:
  http:
  network:
  db:
  db_shared:

x-db-custom: &db-variables
  DB_TYPE: mysql
  DB_HOST: ${DB_HOST-db}  
  DB_USERNAME: ${DB_USERNAME-root}
  DB_PASSWORD: ${DB_PASSWORD-rootpw}
  DB_DATABASE: ${DB_DATABASE-trustchain}

services:
  test-e2e-ci:
    image: trustcerts/trustchain-dev:${IMAGE_TAG-dev}
    command: npm run test:e2e-ci
    privileged: true
    environment:
      IDENTIFIER: ${IDENTIFIER}
      LOG_LEVEL: ${LOG_LEVEL-info}
      <<: *db-variables
    volumes:
      - ../:/app
      - /app/node_modules
      - /var/run/docker.sock:/var/run/docker.sock
      - db_shared:/app/db_shared
    depends_on:
      - redis
      - db
      - wallet
      - parse
      - persist
      - http
      - network
    networks:
      internal:

  test-e2e:
    image: trustcerts/trustchain-dev:${IMAGE_TAG-dev}
    command: npm run test:e2e
    privileged: true
    environment:
      IDENTIFIER: ${IDENTIFIER}
      LOG_LEVEL: ${LOG_LEVEL-info}
      <<: *db-variables
    volumes:
      - ../:/app
      - /app/node_modules
      - /var/run/docker.sock:/var/run/docker.sock
      - db_shared:/app/db_shared
    depends_on:
      - redis
      - db
      - wallet
      - parse
      - persist
      - http
      - network
    networks:
      internal:

  test-persist:
    image: trustcerts/trustchain-dev:${IMAGE_TAG-dev}
    command: npm run test:e2e-persist
    depends_on:
      - redis      
    environment:
      IDENTIFIER: ${IDENTIFIER}
      LOG_LEVEL: ${LOG_LEVEL-info}
    volumes:
      - ../:/app
      - /app/node_modules
    networks:
      internal:

  test-parse:
    image: trustcerts/trustchain-dev:${IMAGE_TAG-dev}
    command: npm run test:e2e-parse
    depends_on:
      - redis
      - db
      - persist
    environment:
      IDENTIFIER: ${IDENTIFIER}
      LOG_LEVEL: ${LOG_LEVEL-info}
      <<: *db-variables
    volumes:
      - ../:/app
      - /app/node_modules
    networks:
      internal:

  test-wallet:
    image: trustcerts/trustchain-dev:${IMAGE_TAG-dev}
    command: npm run test:e2e-wallet
    depends_on:
      - redis
    environment:
      IDENTIFIER: ${IDENTIFIER}
      LOG_LEVEL: ${LOG_LEVEL-info}
    volumes:
      - ../:/app
      - /app/node_modules
    networks:
      internal:

  test-httpGateway:
    image: trustcerts/trustchain-dev:${IMAGE_TAG-dev}
    command: npm run test:e2e-http-gateway
    depends_on:
      - redis
      - db
      - parse
      - persist
      - wallet
    environment:
      IDENTIFIER: ${IDENTIFIER}
      LOG_LEVEL: ${LOG_LEVEL-info}
      RESET: ${RESET-false}
      <<: *db-variables
    volumes:
      - ../:/app
      - /app/node_modules
    networks:
      internal:

  test-httpObserver:
    image: trustcerts/trustchain-dev:${IMAGE_TAG-dev}
    command: npm run test:e2e-http-observer
    depends_on:
      - redis
      - db
      - parse
      - persist
      - wallet
      - network
    environment:
      IDENTIFIER: ${IDENTIFIER}
      LOG_LEVEL: ${LOG_LEVEL-info}
      RESET: ${RESET-false}
      <<: *db-variables
    volumes:
      - ../:/app
      - /app/node_modules
      - db_shared:/app/db_shared
    networks:
      internal:

  test-httpValidator:
    image: trustcerts/trustchain-dev:${IMAGE_TAG-dev}
    command: npm run test:e2e-http-validator
    depends_on:
      - redis
      - db
      - parse
      - persist
      - wallet
      - network
    environment:
      IDENTIFIER: ${IDENTIFIER}
      LOG_LEVEL: ${LOG_LEVEL-info}
      RESET: ${RESET-false}
      <<: *db-variables
    volumes:
      - ../:/app
      - /app/node_modules
    networks:
      internal:

  test-networkGateway:
    image: trustcerts/trustchain-dev:${IMAGE_TAG-dev}
    command: npm run test:e2e-network-gateway
    depends_on:
      - redis
      - persist
      - wallet
      - db
    environment:      
      OWN_PEER: network:3000
      IDENTIFIER: ${IDENTIFIER}
      LOG_LEVEL: ${LOG_LEVEL-info}
      <<: *db-variables
    volumes:
      - ../:/app
      - /app/node_modules
    networks:
      internal:

  test-networkObserver:
    image: trustcerts/trustchain-dev:${IMAGE_TAG-dev}
    command: npm run test:e2e-network-observer
    depends_on:
      - redis
      - persist
      - wallet
      - db
    environment:
      OWN_PEER: network:3000
      IDENTIFIER: ${IDENTIFIER}
      LOG_LEVEL: ${LOG_LEVEL-info}
      <<: *db-variables
    volumes:
      - ../:/app
      - /app/node_modules
    networks:
      internal:

  test-networkValidator:
    image: trustcerts/trustchain-dev:${IMAGE_TAG-dev}
    command: npm run test:e2e-network-validator
    depends_on:
      - redis
      - db
      - persist
      - parse
      - wallet
      - network
    environment:
      OWN_PEER: network:3000
      IDENTIFIER: ${IDENTIFIER}
      LOG_LEVEL: ${LOG_LEVEL-info}
      <<: *db-variables
    volumes:
      - ../:/app
      - /app/node_modules
    networks:
      internal:

  test-wallet:
    image: trustcerts/trustchain-dev:${IMAGE_TAG-dev}
    command: npm run test:e2e-wallet
    depends_on:
      - redis
    environment:
      IDENTIFIER: ${IDENTIFIER}
      LOG_LEVEL: ${LOG_LEVEL-info}
    volumes:
      - ../:/app
      - /app/node_modules
    networks:
      internal:
      

  wallet:
    image: trustcerts/trustchain-wallet:${IMAGE_TAG-dev}
    restart: ${RESTART-always}
    depends_on:
      - redis
    environment:
      IDENTIFIER: ${IDENTIFIER}
      LOG_LEVEL: ${LOG_LEVEL-info}
    volumes:
      - wallet:/app/storage
    networks:
      internal:

  parse:
    image: trustcerts/trustchain-parse:${IMAGE_TAG-dev}
    restart: ${RESTART-always}
    depends_on:
      - redis
      - db
    environment:
      IDENTIFIER: ${IDENTIFIER}
      LOG_LEVEL: ${LOG_LEVEL-info}
      <<: *db-variables
    volumes:
      - parse:/app/storage
      - db_shared:/app/db_shared
    networks:
      internal:

  persist:
    image: trustcerts/trustchain-persist:${IMAGE_TAG-dev}
    restart: ${RESTART-always}
    depends_on:
      - redis
    environment:
      IDENTIFIER: ${IDENTIFIER}
      LOG_LEVEL: ${LOG_LEVEL-info}
    volumes:
      - persist:/app/storage
    networks:
      internal:

  http:
    image: trustcerts/trustchain-http-${NODE_TYPE}:${IMAGE_TAG-dev}
    restart: ${RESTART-always}
    depends_on:
      - redis
      - db
      - parse
      - wallet
    environment:
      NODE_SECRET: ${NODE_SECRET}
      NETWORK_SECRET: ${NETWORK_SECRET}
      IDENTIFIER: ${IDENTIFIER}
      LOG_LEVEL: ${LOG_LEVEL-info}
      RESET: ${RESET-false}
      <<: *db-variables
    volumes:
      - http:/app/storage
    networks:
      internal:

  network:
    image: trustcerts/trustchain-network-${NODE_TYPE}:${IMAGE_TAG-dev}
    restart: ${RESTART-always}
    depends_on:
      - redis
      - db
      - parse
      - persist
      - wallet
    environment:
      OWN_PEER: network:3000      
      NETWORK_SECRET: ${NETWORK_SECRET}
      CHUNK_SIZE: ${CHUNK_SIZE-100}
      IDENTIFIER: ${IDENTIFIER}
      LOG_LEVEL: ${LOG_LEVEL-info}
      RECONNECT: ${RECONNECT-true}
      <<: *db-variables
    volumes:
      - network:/app/storage
    networks:
      internal:
  
  db:
    image: mongo
    restart: ${RESTART-always}
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${DB_USERNAME-root}
      MONGO_INITDB_ROOT_PASSWORD: ${DB_PASSWORD-rootpw}
      MONGO_INITDB_DATABASE: ${DB_DATABASE-trustchain}
    volumes:
      - db:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js
    networks:
      internal:

  redis:
    image: redis
    restart: ${RESTART-always}
    networks:
      internal:
