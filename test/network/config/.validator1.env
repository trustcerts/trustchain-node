# set a local project name to identify your containers
COMPOSE_PROJECT_NAME=validator1
# type of the node (validator, gateway, observer)
NODE_TYPE=validator
# restart policy of the container
RESTART=unless-stopped
# unique identifier of the node in the network.
IDENTIFIER=Validator1
# qualified domain name of the node. Services will be attached with a port or a subdomain to be accessible.
DOMAIN=validator1.dev.trustcerts.de
# secret to protect admin endpoints of the node.
NODE_SECRET=dev
# secret to protect endpoints that are only available to nodes of the network. All participants have to use the same secret.
NETWORK_SECRET=dev
# defines the log level in the docker log, default value is info. debug should be used with caution since it produces a lot of data.
LOG_LEVEL=debug
# full qualified domain name first node this one should build up a connection.
VALIDATOR=validator2_network_1:3000

IP_ADDRESS=validator1_http_1
DID_NETWORK=tc:dev

#----------#
# Services #
#----------#

#HTTP
# include with -f http/docker-compose.port.yml
HTTP_PORT=3500
# include with -f http/docker-compose.proxy.yml
#HTTP_HOSTNAME=api

#Database
# include with -f database/docker-compose.port.yml
DATABASE_PORT=3010

#Prometheus
# include with -f prometheus/docker-compose.port.yml
#PROMETHEUS_PORT=
# include with -f prometheus/docker-compose.proxy.yml
#PROMETHEUS_HOSTNAME=prometheus

#Loki
# include with -f loki/docker-compose.port.yml
#LOKI_PORT=
# include with -f loki/docker-compose.proxy.yml
#LOKI_HOSTNAME=loki

#Grafana
# include with -f grafana/docker-compose.port.yml
#GRAFANA_PORT=
# include with -f grafana/docker-compose.port.yml
#GRAFANA_HOSTNAME=grafana

GRAFANA_CONFIG=../config/grafana

#-----------#
# Validator #
#-----------#
# include -f validator/docker-compose.yml
# amount of validators that are requiered to run the consensus. Minimum is 2 so there is one proposer and one validator.
VALIDATOR_MIN=3

#Network
# include with -f network/docker-compose.port.yml
NETWORK_PORT=3501
NETWORK_URL=validator1_network_1
# include with -f network/docker-compose.proxy.yml
#NETWORK_HOSTNAME=node

#-------------#
# Development #
#-------------#
# path to the compiled source code. Only requiered for developpment to reload the node automatically.
# include with -f docker-compose.dev.yml
COMPILED_PATH=/root/trustcerts/trustchain/dist/apps
# if set to true the node can be resetted. Never use it in production!
RESET=true

#--------#
# Health #
#--------#
HEALTH_REPEAT=1
HEALTH_NAME=Healthcheck
HEALTH_IDENTIFIER=did:trust:tc:dev:id:XLzBJ69jeqEgq7oqqdEsHW
HEALTH_SECRET=Healthcheck
HEALTH_GATEWAY=http://gateway1_http_1:3000
HEALTH_OBSERVER=http://observer1_http_1:3000
HEALTH_BC_ID=tc:dev
