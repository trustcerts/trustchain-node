# set a local project name to identify your containers
COMPOSE_PROJECT_NAME=observer1
# type of the node (validator, gateway, observer)
NODE_TYPE=observer
# restart policy of the container
RESTART=unless-stopped
# unique identifier of the node in the network.
IDENTIFIER=Observer1
# qualified domain name of the node. Services will be attached with a port or a subdomain to be accessible.
DOMAIN=observer1.dev.trustcerts.de
# secret to protect admin endpoints of the node.
NODE_SECRET=dev
# secret to protect endpoints that are only available to nodes of the network. All participants have to use the same secret.
NETWORK_SECRET=dev
# defines the log level in the docker log, default value is info. debug should be used with caution since it produces a lot of data.
LOG_LEVEL=debug
# full qualified domain name first node this one should build up a connection.
VALIDATOR=validator1_network_1:3000

#----------#
# Services #
#----------#

#HTTP
# include with -f http/docker-compose.port.yml
HTTP_PORT=3560
# include with -f http/docker-compose.proxy.yml
#HTTP_HOSTNAME=api

#Database
# include with -f database/docker-compose.port.yml
DATABASE_PORT=3016

#Prometheus
# include with -f prometheus/docker-compose.port.yml
PROMETHEUS_PORT=
# include with -f prometheus/docker-compose.proxy.yml
#PROMETHEUS_HOSTNAME=prometheus

#Network
NETWORK_URL=observer1_network_1

#Grafana
# include with -f grafana/docker-compose.port.yml
GRAFANA_PORT=
# include with -f grafana/docker-compose.port.yml
#GRAFANA_HOSTNAME=

#-------------#
# Development #
#-------------#
# path to the compiled source code. Only requiered for developpment to reload the node automatically.
# include with -f docker-compose.dev.yml
COMPILED_PATH=/root/trustcerts/trustchain/dist/apps
# if set to true the node can be resetted. Never use it in production!
RESET=true
